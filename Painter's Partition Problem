// Link : https://www.codingninjas.com/studio/problems/painter-s-partition-problem_1089557

// Code :
#include <bits/stdc++.h>

int checkTime(vector<int> &boards,int n, int k,int mid)
{
    int numOfPainters=1,time=0;
    for(int i=0;i<n;i++)
    {
        if(time+boards[i]<=mid)
            time+=boards[i];
        else
        {
            time=boards[i];
            numOfPainters++;
        }
    }
    if(numOfPainters<=k)
        return true;
    else
        return false;
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int low = *max_element(boards.begin(),boards.end()),
        high = accumulate(boards.begin(),boards.end(),0),
        n= boards.size(),
        mid;

    if(k>n)
        return -1;
    
    while(low<=high)
    {
        mid= low+(high-low)/2;
        if(checkTime(boards,n,k,mid))
            high = mid-1;
        else
            low = mid+1;
    }
    return  low;
}

// Time Complexity : O (n * log( sum(arr)-max(arr)+1 ))
