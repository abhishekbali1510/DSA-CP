// Poblem Link : https://leetcode.com/problems/next-permutation/description/

// Code : 
void nextPermutation(vector<int>& nums) 
{
      int n = nums.size(),
          idx;

      for(int i=n-2;i>=0;i--)
      {
          if(nums[i]<nums[i+1])
          {
              idx = i;
              break;
          }
      }
      std:cout<<idx;  //1
      if(idx == -1)
      {
          // max permuation
          reverse(nums.begin(),nums.end());
      }
      else
      {
          for(int i=n-1;i>idx;i--)
          {
              if(nums[i]>nums[idx])
              {
                  swap(nums[i],nums[idx]);
                  break;
              }
          }
          reverse(nums.begin()+idx+1,nums.end());
      }
}

// Time Complexity : O (3n)
// Space Complexity : O (1)
